{"version":3,"sources":["cmponents/TableContainer.tsx","theme/theme.tsx","cmponents/MainListContainer.tsx","common/api.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","formControl","width","minWidth","table","textAlign","alignSelf","breakpoints","down","margin","spacing","up","paddingLeft","minHeight","background","custom","green","yellow","orange","red","blue","purple","maxWidth","flexDirection","display","border","marginBottom","marginLeft","airs","rows","TableContainer","props","classes","filterCityName","cityList","map","item","index","arr","County","filter","indexOf","useState","age","setAge","Grid","xs","md","Typography","variant","component","FormControl","className","InputLabel","id","Select","labelId","value","onChange","event","target","getCurrentCity","MenuItem","name","key","container","air","alignItems","Box","row","createMuiTheme","bgColor","airList","padding","borderBottom","cityContainer","marginRight","cursor","setColor","MainListContainer","cityInfo","undefined","singleInfo","setSingleInfo","setStyle","currentAqi","num","parseInt","useEffect","py","mr","mb","SiteName","ml","style","AQI","O3","PM10","CO","SO2","NO2","onClick","getSingleInfo","airOpendata","axios","create","baseURL","getAirData","data","get","createStyles","airqualityContainer","fontSize","lineHeight","dateInfo","App","setCityList","cityName","setCityName","a","then","res","status","records","catch","rej","console","log","fetchData","city","length","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.784211b0.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\n// Table\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Grid, Box, Typography} from '@material-ui/core';\r\n// select\r\nimport { Select, MenuItem , FormControl, InputLabel  } from '@material-ui/core';\r\n// interface\r\nimport { IAirInfo } from '../interface/props'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    formControl: {\r\n        width: '100%',\r\n        minWidth: 120,\r\n    },\r\n    table: {\r\n        textAlign: 'center',\r\n        alignSelf: 'flex-end',\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: `${theme.spacing(2)}px 0`,\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            paddingLeft: theme.spacing(2),\r\n        },\r\n        '& > div:nth-child(1)': {\r\n            // table表格顏色(第一層table)\r\n            minHeight: 50,\r\n            '& > div:nth-child(1)': {\r\n                background: theme.custom.green,\r\n            },\r\n            '& > div:nth-child(2)': {\r\n                background: theme.custom.yellow,\r\n            },\r\n            '& > div:nth-child(3)': {\r\n                background: theme.custom.orange,\r\n            },\r\n            '& > div:nth-child(4)': {\r\n                background: theme.custom.red,\r\n            },\r\n            '& > div:nth-child(5)': {\r\n                background: theme.custom.blue,\r\n            },\r\n            '& > div:nth-child(6)': {\r\n                background: theme.custom.purple,\r\n            },\r\n        },\r\n        '& > div': {\r\n            [theme.breakpoints.down('sm')]: {\r\n                maxWidth: '50%',\r\n                flexDirection: 'column',\r\n                display: 'inline-flex'\r\n            },\r\n            '& > div': {\r\n                // 文字解說table\r\n                margin: '0 -1px -1px 0',\r\n                border: '1px solid',\r\n                minHeight: 50,\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginBottom: '-1px',\r\n                },\r\n            },\r\n            '&:nth-child(even) div': {\r\n                // 清除手機尺寸table邊框\r\n                [theme.breakpoints.down('sm')]: {\r\n                    marginLeft: '-1px',\r\n                },\r\n            },\r\n        }\r\n    },\r\n}));\r\n\r\nconst airs = [\r\n    '0~50',\r\n    '51~100',\r\n    '101~150',\r\n    '151~200',\r\n    '201~250',\r\n    '251~300'\r\n]\r\n\r\nconst rows = [\r\n    '良好',\r\n    '普通',\r\n    '對敏感族群不健康',\r\n    '對所有族群不健康',\r\n    '非常不健康',\r\n    '危害'\r\n];\r\n\r\ninterface IProps {\r\n    cityList: IAirInfo[]\r\n    getCurrentCity: Function\r\n}\r\n\r\nconst TableContainer = (props:IProps) => {\r\n    const classes = useStyles()\r\n    // 過濾重複的縣市\r\n    const cityName = props.cityList.map((item: IAirInfo, index, arr) => {\r\n        return item.County\r\n    })\r\n    const filterCityName = cityName.filter((item, index, arr) => {\r\n        return arr.indexOf(item) === index\r\n    })\r\n    // 顯示第一筆資料\r\n    // useEffect(() => {\r\n    //     props.getCurrentCity(filterCityName[0])\r\n    // },[])\r\n\r\n    const [age, setAge] = useState('')\r\n    const changeCity = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        setAge(event.target.value as string)\r\n        props.getCurrentCity(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} md={5}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h4\" component=\"h2\">空氣品質指標(AQI)</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                <FormControl variant=\"filled\" className={classes.formControl}>\r\n                    <InputLabel id=\"demo-simple-select-filled-label\">請選擇地區</InputLabel>\r\n                    <Select\r\n                    labelId=\"demo-simple-select-filled-label\"\r\n                    id=\"demo-simple-select-filled\"\r\n                    value={age}\r\n                    onChange={changeCity}\r\n                    >\r\n                        <MenuItem value=\"null\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        {filterCityName.map(name => (\r\n                            <MenuItem key={name} value={name}>{name}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} md={7} className={classes.table}>\r\n                <Grid container>\r\n                    {\r\n                        airs.map(air => (\r\n                            <Grid container item alignItems=\"center\" md={2} key={air}>\r\n                                <Box width=\"100%\">{air}</Box>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n                <Grid container>\r\n                    {\r\n                        rows.map(row => (\r\n                            <Grid container item alignItems=\"center\" md={2} key={row}>\r\n                                <Box width=\"100%\">{row}</Box>\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableContainer","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\ndeclare module '@material-ui/core/styles/createMuiTheme' {\r\n    interface Theme {\r\n        custom: {\r\n        green: string,\r\n        yellow: string,\r\n        orange: string,\r\n        red: string,\r\n        blue: string,\r\n        purple: string,\r\n        };\r\n    }\r\n    // allow configuration using `createMuiTheme`\r\n    interface ThemeOptions {\r\n        custom?: {\r\n        green?: string,\r\n        yellow?: string,\r\n        orange?: string,\r\n        red?: string,\r\n        blue?: string,\r\n        purple?: string,\r\n        };\r\n    }\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n    custom: {\r\n        green: '#96ceb4',\r\n        yellow: '#ffeead',\r\n        orange: '#ffad60',\r\n        red: '#d9534f',\r\n        blue: '#2e94b9',\r\n        purple: '#a696c8',\r\n    }\r\n});","import React,{ useState, useEffect } from 'react'\r\nimport {Grid, Box, makeStyles, Theme} from '@material-ui/core'\r\n// interface\r\nimport { IAirInfo } from '../interface/props'\r\n// color\r\nimport {theme} from '../theme/theme'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    bgColor: {\r\n        background: 'var(--bgColor)'\r\n    },\r\n    airList: {\r\n        padding: theme.spacing(2),\r\n        border: '1px solid',\r\n        marginBottom: theme.spacing(2),\r\n        '& > div': {\r\n            padding: `${theme.spacing(1)}px 0`,\r\n            borderBottom: '1px solid'\r\n        },\r\n        '& > div:last-child': {\r\n            border: 0\r\n        }\r\n    },\r\n    cityContainer: {\r\n        alignItems: 'start',\r\n        '& > div': {\r\n            '&:nth-child(odd)':{\r\n                // mob中間間距\r\n                '& > div ': {\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        marginRight: theme.spacing(1),\r\n                    },\r\n                },\r\n            },\r\n            '&:nth-child(even)':{\r\n                // mob中間間距\r\n                '& > div ': {\r\n                    [theme.breakpoints.down('sm')]: {\r\n                        marginLeft: theme.spacing(1),\r\n                    },\r\n                },\r\n            },\r\n            '& > div ': {\r\n                marginLeft: 0,\r\n                display: 'flex',\r\n                cursor: 'pointer',\r\n                [theme.breakpoints.up('md')]: {\r\n                    marginLeft: theme.spacing(2),\r\n                },\r\n                '& > div ': {\r\n                    padding: `${theme.spacing(1)}px 0`,\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n\r\ninterface IProps {\r\n    cityInfo: IAirInfo[]\r\n}\r\n\r\nconst setColor = (bgColor: string) => {\r\n    return {\r\n        '--bgColor': bgColor,\r\n    } as React.CSSProperties\r\n}\r\n\r\nconst MainListContainer = (props:IProps) => {\r\n    const classes = useStyles()\r\n    const {cityInfo} = props\r\n    const [singleInfo, setSingleInfo] = useState<IAirInfo | undefined>(undefined)\r\n    // 取得點擊個別的資料\r\n    const getSingleInfo = (index:number) => {\r\n        setSingleInfo(cityInfo[index])\r\n    }\r\n    // 判斷空氣顯示的顏色\r\n    const setStyle = (currentAqi: string) => {\r\n        // 轉換成數字比對\r\n        const num = parseInt(currentAqi)\r\n        if (num <= 50){\r\n            return setColor(theme.custom.green)\r\n        } else if( num >= 51 && num <= 100) {\r\n            return setColor(theme.custom.yellow)\r\n        } else if( num >= 101 && num <= 150) {\r\n            return setColor(theme.custom.orange)\r\n        }else if( num >= 151 && num <= 200) {\r\n            return setColor(theme.custom.red)\r\n        }else if( num >= 201 && num <= 250) {\r\n            return setColor(theme.custom.blue)\r\n        }else if( num >= 251 && num <= 300) {\r\n            return setColor(theme.custom.purple)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSingleInfo(cityInfo[0])\r\n    }, [cityInfo[0]])\r\n\r\n    return (\r\n        <>\r\n            {singleInfo !== undefined ?\r\n            <Grid container item xs={12} md={5}>\r\n                <Grid item xs={6}>\r\n                    <Box py={2} textAlign=\"center\" border={1} mr={'-.5px'} mb={'-1px'}>{singleInfo.SiteName}</Box>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box py={2} textAlign=\"center\" border={1} ml={'-.5px'} mb={'-1px'} className={classes.bgColor} style={setStyle(singleInfo.AQI)}>{singleInfo.AQI}</Box>\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.airList}>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">臭氧O3(ppb)</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo.O3 || '-'}</Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">懸浮微粒PM10</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo.PM10 || '-'}</Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">細懸浮微粒PM2.5</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo['PM2.5'] || '-'}</Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">一氧化碳CO</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo.CO || '-'}</Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">二氧化硫SO2</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo.SO2 || '-'}</Box>\r\n                    </Box>\r\n                    <Box display=\"flex\" width=\"100%\">\r\n                        <Box width=\"50%\" textAlign=\"left\">二氧化氮NO2</Box>\r\n                        <Box width=\"50%\" textAlign=\"right\">{singleInfo.NO2 || '-'}</Box>\r\n                    </Box> \r\n                </Grid>\r\n            </Grid>\r\n            : null }\r\n            <Grid item xs={12} md={7} className={classes.cityContainer}>\r\n                {\r\n                    cityInfo.map((item, index) => (\r\n                        <Box width=\"50%\" display=\"inline-block\" mb={2} key={item.SiteName} onClick={() => getSingleInfo(index)}>\r\n                            <Box textAlign=\"center\">\r\n                                <Box border={1} mr={'-.5px'} width=\"50%\">{item.SiteName}</Box>\r\n                                <Box border={1} ml={'-.5px'} width=\"50%\" className={classes.bgColor} style={setStyle(item.AQI)}>{item.AQI}</Box>\r\n                            </Box>\r\n                        </Box>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainListContainer","import axios from 'axios'\r\n\r\n// \r\nconst airOpendata = axios.create({\r\n    baseURL: 'https://data.epa.gov.tw',\r\n})\r\n\r\n// 取得各地數據 API\r\nexport const getAirData = (data = {}) => airOpendata.get('/api/v1/aqx_p_432?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=json', data)","import React, {useEffect, useState} from 'react';\r\nimport {Grid, Box} from '@material-ui/core';\r\nimport TableContainer from './cmponents/TableContainer'\r\nimport MainListContainer from './cmponents/MainListContainer'\r\n// breakpoints\r\nimport { Theme, makeStyles, createStyles } from '@material-ui/core/styles';\r\n// getAPI\r\nimport { getAirData } from './common/api'\r\n// interface\r\nimport { IAirInfo } from './interface/props'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    airqualityContainer: {\r\n      width: '80%',\r\n      margin: '0 auto',\r\n      fontSize: '16px',\r\n      lineHeight: '1.5',\r\n      background: '#66666620',\r\n      [theme.breakpoints.down('sm')]: {\r\n        width: '100%',\r\n      }\r\n    },\r\n    dateInfo: {\r\n      [theme.breakpoints.up('xs')]: {\r\n        marginBottom: theme.spacing(2)\r\n      },\r\n      [theme.breakpoints.up('sm')]: {\r\n        margin: `${theme.spacing(2)}px 0`\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [cityList, setCityList] = useState([])\r\n  const [cityName, setCityName] = useState('None')\r\n\r\n  useEffect( () => {\r\n    const fetchData = async () => {\r\n      await getAirData()\r\n        .then(res => {\r\n          if(res.status === 200){\r\n            setCityList(res.data.records)\r\n          }\r\n        })\r\n        .catch(rej => console.log(rej))\r\n    }\r\n    fetchData()\r\n  },[])\r\n\r\n  const getCurrentCity = (city:string) => {\r\n    setCityName(city)\r\n  }\r\n  // 取得城市個別資訊\r\n  const cityInfo =  cityList.filter((item:IAirInfo) => {\r\n    if(item.County === cityName) return item \r\n  })\r\n\r\n  return (\r\n    <Grid className={classes.airqualityContainer}>\r\n      <Grid container alignItems=\"center\">\r\n        { cityList && <TableContainer cityList={cityList} getCurrentCity={getCurrentCity}/> }\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.dateInfo}>\r\n        <Box>{cityName} / 2019-01-24 14:00 更新</Box>\r\n      </Grid>\r\n      {\r\n        cityInfo.length > 0 ?\r\n        <Grid container>\r\n          <MainListContainer cityInfo={cityInfo} />\r\n        </Grid>\r\n        : null\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n// 自訂義顏色\r\nimport {theme} from './theme/theme'\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <App />\r\n  </ThemeProvider>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}